/**
 * @file single.hpp
 *
 * @brief Implementation of single.hpp Classes
 * 
 * This file contains the implementation of the message classes generated by the Lions Compiler.
 * 
 * @details
 * This file was generated by the Lions Compiler (https://github.com/ItsNotSoftware/lions) on .
 * Modifying this file manually is not recommended as it may lead to unexpected behavior.
 * 
 * @note
 * Generated files should not be manually edited.
 * 
 * @author Lions Compiler
*/

#ifndef SINGLE_HPP
#define SINGLE_HPP

#include "lions.hpp"
#include <string>


namespace lions {

   namespace msg_id {
   constexpr uint8_t ACCELEROMETER = 1;
   }  // namespace msg_id


class AccelerometerMsg {
   public:
    Header header;
    
    float acc_x;
    float acc_y;
    float acc_z;
    
    /** Create a new accelerometer msg */
   AccelerometerMsg(const uint8_t src, const uint8_t dst, const uint8_t next_hop, const float acc_x, const float acc_y, const float acc_z);
    
    /** Decode LMsg to accelerometer msg */
    AccelerometerMsg(const LMsg &msg); 
    
    /** Encode accelerometer msg to LMsg */
    LMsg encode(const uint8_t src, const uint8_t dst, const uint8_t next_hop);
};


}  // namespace lions

#endif